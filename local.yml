version: '3'

volumes:
  ecommerce_local_postgres_data: {}
  ecommerce_local_postgres_data_backups: {}

services:
  django: &django
    build:
     context: .
     dockerfile: ./compose/local/django/Dockerfile
    image: ecommerce_local_django
    container_name:  ecommerce_local_django
    depends_on:
      - postgres
      - redis
      - elasticsearch
    volumes:
      - .:/app:z
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    ports:
      - '8000:8000'
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: ecommerce_production_postgres
    container_name: ecommerce_local_postgres
    volumes:
      - ecommerce_local_postgres_data:/var/lib/postgresql/data
      - ecommerce_local_postgres_data_backups:/backups
    env_file:
      - ./.envs/.local/.postgres

  redis:
    image: redis:6
    container_name: ecommerce_local_redis

  celeryworker:
    <<: *django
    image: ecommerce_local_celeryworker
    container_name: ecommerce_local_celeryworker
    depends_on:
      - redis
      - postgres
    ports: []
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: ecommerce_local_celerybeat
    container_name: ecommerce_local_celerybeat
    depends_on:
      - redis
      - postgres
    ports: []
    command: /start-celerybeat

  flower:
    <<: *django
    image: ecommerce_local_flower
    container_name: ecommerce_local_flower
    ports:
      - '5555:5555'
    command: /start-flower

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.7.1
    # 8.x
    environment: ['CLI_JAVA_OPTS=-Xms2g -Xmx2g','bootstrap.memory_lock=true','discovery.type=single-node','xpack.security.enabled=false', 'xpack.security.enrollment.enabled=false']
    ports:
      - 9200:9200
    networks:
      - elastic
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
